
2. preproccess the data - data cleaning and formatting.
3. user to location, ECT/EES/Third-Party/Other?,  mapping.
4. user to Departments(Example: legal), mapping

6. Introduction & Problem Formulation in the paper.
7. Read academic articles on the topics - Related Work in the paper. 
    8. content analysis - 2+ methods we want to implement. decide on the method.
    9. topic analysis - a method we want to implement. - decide on the method. 
9. start writing the EDA section of the paper.
10. Add readme file to the project.
11. decide on a splitting method for the email body. - for chain email. (maybe only for fowarding mails.) - only for paper
12. Give some background about adding LLM's - Suggest alternative ways to address these limitation as a future research


Maor:
For next meeting:
6. Introduction & Problem Formulation in the paper.
8. content analysis - 2+ methods we want to implement. decide on the method. (Cons/Pros for several methods, later will choose based on that)
10. Add readme file to the project.
11. decide on a splitting method for the email body. - for chain email. (maybe only for fowarding mails.) - only for paper
Method + results
Related work

Efi:
For next meeting:
9. topic analysis - a method we want to implement. - decide on the method. (Cons/Pros for several methods, later will choose based on that) - LDA not good enough. TF-IDF (need to recheck), BertTopic good but heavy.
1. contextual analysis - a method we want to implement. - decide on the method.
3. user to location
Method + results
Roles
Related work
Limitation and Future Work

Why our results is good? - maybe because of the data we have. We are working on a Enforcer for ENRON! if the data will change we will train once a month
We will have a model that will be trained once a month.

WE ARE NOT BUILDING A SOFTWARE FOR EVERYONE

Done:
2. preproccess the data - data cleaning and formatting.
4. user to Departments(Example: legal), mapping
9. start writing the EDA section of the paper.

later:
3. API to update the data using the user information.


Not relevant:
2. maybe classify users with a model. 
